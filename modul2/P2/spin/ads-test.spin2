con
  _clkfreq = 160_000_000

  RX1     = 35  { I }                                           ' programming / debug
  TX1     = 37  { O }
  BR_TERM  = 115_200                                            ' terminal baud rate

  ADC_CLK = 16
  ADC_SDO = 17
  ADC_SDI = 18
  ADC_DRDY = 19
  ADC_CS = 20
  ADC_PDWN = 21

  TRIGGER = 22
  INSTRUCTION_BUFFER_SIZE = 8
  BUFFER_SIZE = 100

  DEBUG_BAUD  = 230_400

var
  BYTE instruction_buffer[INSTRUCTION_BUFFER_SIZE]
  LONG read
  LONG write
  LONG buffer[BUFFER_SIZE * 2]
obj
  adc : "buffered_ads1256"

pub main() | a, b, c, channel, timestamp, mux, value, rpos, wpos
  read := BUFFER_SIZE
  adc.start(ADC_SDI, ADC_SDO, ADC_CLK, ADC_CS, ADC_DRDY, ADC_PDWN, @read)

  pinlow(TRIGGER)
  pinhigh(TRIGGER)
  'adc.wreg(adc.RDRATE, %11110000) ' 30K SPS
  adc.wreg(adc.RDRATE, %00000011) ' 2.5 SPS
  a := adc.rreg(adc.RADCON, 1)
  debug(zstr(string("ADCON")))

  repeat a from 0 to 0 'INSTRUCTION_BUFFER_SIZE - 1
    instruction_buffer[a] := (a << 4) | (1 << 3) ' AIN-channel and AINCOM
  adc.start_continuous_read(@instruction_buffer, 1) 'INSTRUCTION_BUFFER_SIZE)
  repeat
    timestamp, mux, value := adc.read_continuous()
    debug(uhex(timestamp))
    debug(uhex_byte(mux))
    debug(uhex_long(value))
